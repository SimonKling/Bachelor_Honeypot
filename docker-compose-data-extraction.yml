# T-Pot: CUSTOM EDITION
# Generated on: 2024-07-29 09:09:45
networks:
  adbhoney_local: null
  ciscoasa_local: null
  citrixhoneypot_local: null
  conpot_local_IEC104: null
  conpot_local_guardian_ast: null
  conpot_local_ipmi: null
  conpot_local_kamstrup_382: null
  cowrie_local: null
  ddospot_local: null
  dicompot_local: null
  dionaea_local: null
  elasticpot_local: null
  heralding_local: null
  ipphoney_local: null
  mailoney_local: null
  medpot_local: null
  redishoneypot_local: null
  sentrypeer_local: null
  tanner_local: null
  spiderfoot_local: null
  ewsposter_local: null
services:
  tpotinit:
    container_name: tpotinit
    env_file:
    - .env
    restart: always
    stop_grace_period: 60s
    tmpfs:
    - /tmp/etc:uid=2000,gid=2000
    - /tmp/:uid=2000,gid=2000
    network_mode: host
    cap_add:
    - NET_ADMIN
    image: ${TPOT_REPO}/tpotinit:${TPOT_VERSION}
    pull_policy: ${TPOT_PULL_POLICY}
    volumes:
    - ${TPOT_DOCKER_COMPOSE}:/tmp/tpot/docker-compose.yml:ro
    - ${TPOT_DATA_PATH}/blackhole:/etc/blackhole
    - ${TPOT_DATA_PATH}:/data
    - /var/run/docker.sock:/var/run/docker.sock:ro
  elasticsearch:
    container_name: elasticsearch
    restart: always
    depends_on:
      tpotinit:
        condition: service_healthy
    environment:
    - bootstrap.memory_lock=true
    - ES_JAVA_OPTS=-Xms2048m -Xmx2048m
    - ES_TMPDIR=/tmp
    cap_add:
    - IPC_LOCK
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    mem_limit: 4g
    ports:
    - 127.0.0.1:64298:9200
    image: ${TPOT_REPO}/elasticsearch:${TPOT_VERSION}
    pull_policy: ${TPOT_PULL_POLICY}
    volumes:
    - ${TPOT_DATA_PATH}:/data
  kibana:
    container_name: kibana
    restart: always
    depends_on:
      elasticsearch:
        condition: service_healthy
    mem_limit: 1g
    ports:
    - 127.0.0.1:64296:5601
    image: ${TPOT_REPO}/kibana:${TPOT_VERSION}
    pull_policy: ${TPOT_PULL_POLICY}
  map_redis:
    container_name: map_redis
    restart: always
    depends_on:
      tpotinit:
        condition: service_healthy
    stop_signal: SIGKILL
    tty: true
    image: ${TPOT_REPO}/redis:${TPOT_VERSION}
    pull_policy: ${TPOT_PULL_POLICY}
    read_only: true
  map_web:
    container_name: map_web
    restart: always
    depends_on:
      tpotinit:
        condition: service_healthy
    environment:
    - MAP_COMMAND=AttackMapServer.py
    stop_signal: SIGKILL
    tty: true
    ports:
    - 127.0.0.1:64299:64299
    image: ${TPOT_REPO}/map:${TPOT_VERSION}
    pull_policy: ${TPOT_PULL_POLICY}
  map_data:
    container_name: map_data
    restart: always
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
    - MAP_COMMAND=DataServer_v2.py
    - TPOT_ATTACKMAP_TEXT=${TPOT_ATTACKMAP_TEXT}
    - TZ=${TPOT_ATTACKMAP_TEXT_TIMEZONE}
    stop_signal: SIGKILL
    tty: true
    image: ${TPOT_REPO}/map:${TPOT_VERSION}
    pull_policy: ${TPOT_PULL_POLICY}
  ewsposter:
    container_name: ewsposter
    restart: always
    depends_on:
      tpotinit:
        condition: service_healthy
    networks:
    - ewsposter_local
    environment:
    - EWS_HPFEEDS_ENABLE=false
    - EWS_HPFEEDS_HOST=host
    - EWS_HPFEEDS_PORT=port
    - EWS_HPFEEDS_CHANNELS=channels
    - EWS_HPFEEDS_IDENT=user
    - EWS_HPFEEDS_SECRET=secret
    - EWS_HPFEEDS_TLSCERT=false
    - EWS_HPFEEDS_FORMAT=json
    image: ${TPOT_REPO}/ewsposter:${TPOT_VERSION}
    pull_policy: ${TPOT_PULL_POLICY}
    volumes:
    - ${TPOT_DATA_PATH}:/data
    - ${TPOT_DATA_PATH}/ews/conf/ews.ip:/opt/ewsposter/ews.ip
  nginx:
    container_name: nginx
    restart: always
    environment:
    - TPOT_OSTYPE=${TPOT_OSTYPE}
    depends_on:
      tpotinit:
        condition: service_healthy
    tmpfs:
    - /var/tmp/nginx/client_body
    - /var/tmp/nginx/proxy
    - /var/tmp/nginx/fastcgi
    - /var/tmp/nginx/uwsgi
    - /var/tmp/nginx/scgi
    - /run
    - /var/lib/nginx/tmp:uid=100,gid=82
    network_mode: host
    ports:
    - 64297:64297
    image: ${TPOT_REPO}/nginx:${TPOT_VERSION}
    pull_policy: ${TPOT_PULL_POLICY}
    read_only: true
    volumes:
    - ${TPOT_DATA_PATH}/nginx/cert/:/etc/nginx/cert/:ro
    - ${TPOT_DATA_PATH}/nginx/conf/nginxpasswd:/etc/nginx/nginxpasswd:ro
    - ${TPOT_DATA_PATH}/nginx/conf/lswebpasswd:/etc/nginx/lswebpasswd:ro
    - ${TPOT_DATA_PATH}/nginx/log/:/var/log/nginx/